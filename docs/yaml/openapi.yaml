openapi: 3.0.0
info:
    description: Working Day Service
    title: Working Day Service
    version: '1.0'
    
servers:
  - url: http://84.201.137.230:8080
    description: production
    
paths:
    /v1/employees:
        get:
            description: Get list of employees
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: Employee information
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/EmployeesResponse'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                    
    /v1/employee/add:
        post:
            description: Add new employee
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmployeeAddRequest'
            responses:
                '200':
                    description: Login information
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginInfo'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/employee/add-head:
        post:
            description: Add head of the employee
            parameters:
              - in: query
                name: employee_id
                description: Id of the employee to add head to
                schema:
                    type: string
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EmployeeAddHeadRequest'
            responses:
                '200':
                    description: Head was added
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                            

    /v1/employee/remove:
        post:
            description: Remove new employee
            parameters:
              - in: query
                name: employee_id
                description: Id of the employee to remove
                schema:
                    type: string
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: Employee was removed
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/employee/info:
        get:
            description: Get employee info
            parameters:
              - in: query
                name: employee_id
                description: Id of the employee to check
                schema:
                    type: string
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: Employee information
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Employee'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/profile/upload-photo:
        post:
            description: Upload personal photo
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            responses:
                '200':
                    description: Upload link
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UploadPhotoResponse'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/profile/edit:
        post:
            description: Edit personal information
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ProfileEditRequest'
            responses:
                '200':
                    description: Information was updated
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/authorize:
        post:
            description: Authorize user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AuthorizeRequest'
            responses:
                '200':
                    description: Authorized successfully
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AuthorizeResponse'
                '404':
                    description: Not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/notifications:
        post:
            description: Get list of notifications
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/NotificationsRequest'
            responses:
                '200':
                    description: List of notifications
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotificationsResponse'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/actions:
        post:
            description: Get list of user actions for a certain period
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ActionsRequest'
            responses:
                '200':
                    description: List of user actions
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ActionsResponse'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/abscence/request:
        post:
            description: Request an abscence
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AbscenceRequestRequest'
            responses:
                '200':
                    description: Abscence was requested
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AbscenceRequestResponse'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/abscence/verdict:
        post:
            description: Approve or deny an abscence
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AbscenceVerdictRequest'
            responses:
                '200':
                    description: Verdict was sent
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/documents/vacation:
        get:
            description: Generate vacation document
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
              - in: query
                name: action_id
                description: Id of vacation action
                schema:
                    type: string
            responses:
                '200':
                    description: Generated document download link
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DocumentsVacationResponse'
                '400':
                    description: Action type is not vacation
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/attendance/add:
        post:
            description: Add attendance hours for a certain employee
            parameters:
              - in: header
                name: Authorization
                description: Token of session user
                schema:
                    type: string
              - in: query
                name: employee_id
                description: Id of employee to add attendance for
                schema:
                    type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AttendanceAddRequest'
            responses:
                '200':
                    description: Attendance was added successfully
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                '403':
                    description: Wrong authorization token
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
                

components:
    schemas:
        ErrorMessage:
            type: object
            additionalProperties: false
            required:
              - message
            properties:
                message:
                    type: string

        ListEmployee:
            type: object
            additionalProperties: false
            required:
              - id
              - name
              - surname
            properties:
                id:
                    type: string
                name:
                    type: string
                surname:
                    type: string
                patronymic:
                    type: string
                photo_link:
                    type: string

        EmployeesResponse:
            type: object
            additionalProperties: false
            required:
              - employees
            properties:
                employees:
                    type: array
                    items:
                        $ref: '#/components/schemas/ListEmployee'
                    
        EmployeeAddRequest:
            type: object
            additionalProperties: false
            required:
              - name
              - surname
              - role
            properties:
                name:
                    type: string
                surname:
                    type: string
                patronymic:
                    type: string
                role: 
                    $ref: '#/components/schemas/Role'
                    
        LoginInfo:
            type: object
            additionalProperties: false
            required:
                - login
                - password
            properties:
                login:
                    type: string
                password:
                    type: string

        EmployeeAddHeadRequest:
            type: object
            additionalProperties: false
            required:
              - head_id
            properties:
                head_id:
                    type: string
        
        Employee:
            type: object
            additionalProperties: false
            required:
              - id
              - name
              - surname
            properties:
                id:
                    type: string
                name:
                    type: string
                surname:
                    type: string
                phone:
                    type: string
                email:
                    type: string
                birthday:
                    type: string
                photo_link:
                    type: string
                password:
                    type: string
                head_id:
                    type: string

        ProfileEditRequest:
            type: object
            additionalProperties: false
            properties:
                phone:
                    type: string
                email:
                    type: string
                birthday:
                    type: string
                password:
                    type: string
        
        AuthorizeRequest:
            type: object
            additionalProperties: false
            required:
              - login
              - password
            properties:
                login:
                    type: string
                password:
                    type: string

        AuthorizeResponse:
            type: object
            additionalProperties: false
            required:
              - token
              - role
            properties:
                token:
                    type: string
                role:
                    $ref: '#/components/schemas/Role'

        NotificationsRequest:
            type: object
            additionalProperties: false
            properties:
                #Not supported yet
                earlier_than:
                    type: string
                    description: Timestamp that should be later than every notification timestamp

        NotificationsResponse:
            type: object
            additionalProperties: false
            required:
              - notifications
            properties:
                notifications:
                    type: array
                    items:
                        $ref: '#/components/schemas/Notification'

        Notification:
            type: object
            additionalProperties: false
            required:
              - id
              - type
              - is_read
              - text
              - created
            properties:
                id:
                    type: string
                type:
                    type: string
                is_read:
                    type: boolean
                sender_id:
                    type: string
                text:
                    type: string
                action_id:
                    type: string
                created:
                    type: string

        ActionsRequest:
            type: object
            additionalProperties: false
            properties:
                from:
                    type: string
                    description: Timestamp for start of a period
                to:
                    type: string
                    description: Timestamp for end of a period

        ActionsResponse:
            type: object
            additionalProperties: false
            required:
              - actions
            properties:
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserAction'

        UserAction:
            type: object
            additionalProperties: false
            required:
              - id
              - type
              - start_date
              - end_date
            properties:
                id:
                    type: string
                type:
                    type: string
                start_date:
                    type: string
                end_date:
                    type: string
                status:
                    type: string

        AbscenceRequestRequest:
            type: object
            additionalProperties: false
            required:
              - start_date
              - end_date
              - type
            properties:
                start_date:
                    type: string
                end_date:
                    type: string
                type: 
                    type: string
                    enum:
                      - vacation
        
        AbscenceRequestResponse:
            type: object
            additionalProperties: false
            required:
              - action_id
            properties:
                action_id:
                    type: string

        AbscenceVerdictRequest:
            type: object
            additionalProperties: false
            required:
              - action_id
              - approve
            properties:
                action_id:
                    type: string
                approve:
                    type: boolean

        DocumentsVacationResponse:
            type: object
            additionalProperties: false
            required:
              - download_link
            properties:
                download_link:
                    type: string

        UploadPhotoResponse:
            type: object
            additionalProperties: false
            required:
              - url
            properties:
                url:
                    type: string
        
        Role:
            type: string
            enum:
              - user
              - admin
              - manager

        AttendanceAddRequest:
            type: object
            additionalProperties: false
            required:
              - start_date
              - end_date
            properties:
                start_date:
                    type: string
                end_date:
                    type: string
